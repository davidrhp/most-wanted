services:
  backend:
    build: ./
    restart: always
    labels:
      - traefik.enable=true
      # Define the port inside of the Docker service to use
      - traefik.http.services.app.loadbalancer.server.port=8080
      # Make Traefik use this domain in http
      - traefik.http.routers.app-http.entrypoints=http
      - traefik.http.routers.app-http.rule=Host(`davidrhp.com`)
      # Use the traefik-public network (declared below)
      - traefik.docker.network=traefik-public
      # Make Traefik use this domain in https
      - traefik.http.routers.app-https.entrypoints=https
      - traefik.http.routers.app-https.rule=Host(`davidrhp.com`)
      - traefik.http.routers.app-https.tls=true
      # Use the "le" (Let's Encrypt) resolver
      - traefik.http.routers.app-https.tls.certresolver=le
      # https-redirect middleware to redirect http to https
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      # Middleware to redirect http to https
      - traefik.http.routers.app-http.middlewares=https-redirect
      # Add this if the main app should require authentication handled by traefik
      # - traefik.http.routers.traefik-dashboard-https.middlewares=admin-auth
    networks:
      - traefik-public

networks:
  traefik-public:
    external: true